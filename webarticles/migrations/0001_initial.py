# Generated by Django 3.0.3 on 2020-02-25 18:23

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('canonical_url', models.CharField(max_length=2083, unique=True)),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('date_published', models.DateTimeField(null=True)),
                ('date_captured', models.DateTimeField()),
                ('group_id', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('domain', models.CharField(max_length=255, unique=True)),
                ('site_type', models.CharField(max_length=31)),
                ('base_url', models.CharField(max_length=511, unique=True)),
                ('is_alive', models.BooleanField(default=True)),
                ('is_enabled', models.BooleanField(default=True)),
                ('last_alive', models.DateTimeField(default=datetime.datetime.now)),
            ],
        ),
        migrations.CreateModel(
            name='Url',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('raw', models.CharField(max_length=2083, null=True)),
                ('expanded', models.CharField(max_length=2083, null=True)),
                ('canonical', models.CharField(max_length=2083, null=True)),
                ('html', models.TextField(null=True)),
                ('date_published', models.DateTimeField(blank=True)),
                ('status_code', models.SmallIntegerField(blank=True, default=0)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webarticles.Article')),
            ],
        ),
        migrations.CreateModel(
            name='SiteTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('source', models.CharField(max_length=31)),
                ('sites', models.ManyToManyField(blank=True, related_name='site_tags', to='webarticles.Site')),
            ],
        ),
        migrations.AddField(
            model_name='site',
            name='urls',
            field=models.ManyToManyField(blank=True, related_name='site_urls', to='webarticles.Url'),
        ),
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=31, unique=True)),
                ('platform_types', models.CharField(choices=[('social_network', 'Social Network'), ('news_website', 'News Website')], max_length=15)),
                ('urls', models.ManyToManyField(blank=True, related_name='platform_urls', to='webarticles.Url')),
            ],
        ),
        migrations.AddField(
            model_name='article',
            name='site_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webarticles.Site'),
        ),
        migrations.CreateModel(
            name='AlternateDomain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('is_alive', models.BooleanField(default=True)),
                ('site', models.ManyToManyField(blank=True, related_name='alternate_domains', to='webarticles.Site')),
            ],
        ),
    ]
